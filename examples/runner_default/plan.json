{
  "format_version": "0.1",
  "terraform_version": "0.12.9",
  "variables": {
    "bucket_name": {
      "value": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0"
    },
    "enable_ssh_access": {
      "value": false
    },
    "registration_token": {
      "value": "GBpeL612xfp3DtEjzZsx"
    },
    "subnet_ids": {
      "value": [
        "subnet-00f1b18508dcc87f8",
        "subnet-01e37c6ab538e9ab1",
        "subnet-02b4067bb91f61a59"
      ]
    },
    "vpc_id": {
      "value": "vpc-07a59518ae4faa320"
    }
  },
  "planned_values": {
    "root_module": {
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.runner.aws_autoscaling_group.gitlab_runner_instance",
              "mode": "managed",
              "type": "aws_autoscaling_group",
              "name": "gitlab_runner_instance",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "desired_capacity": 1,
                "enabled_metrics": null,
                "force_delete": false,
                "health_check_grace_period": 0,
                "initial_lifecycle_hook": [],
                "launch_template": [],
                "max_size": 1,
                "metrics_granularity": "1Minute",
                "min_elb_capacity": null,
                "min_size": 1,
                "mixed_instances_policy": [],
                "name": "gitlab-runner-as-group",
                "name_prefix": null,
                "placement_group": null,
                "protect_from_scale_in": false,
                "suspended_processes": null,
                "tag": [],
                "tags": null,
                "termination_policies": null,
                "timeouts": null,
                "vpc_zone_identifier": [
                  "subnet-00f1b18508dcc87f8",
                  "subnet-01e37c6ab538e9ab1",
                  "subnet-02b4067bb91f61a59"
                ],
                "wait_for_capacity_timeout": "10m",
                "wait_for_elb_capacity": null
              }
            },
            {
              "address": "module.runner.aws_autoscaling_schedule.scale_in",
              "mode": "managed",
              "type": "aws_autoscaling_schedule",
              "name": "scale_in",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "autoscaling_group_name": "gitlab-runner-as-group",
                "desired_capacity": 0,
                "max_size": 0,
                "min_size": 0,
                "recurrence": "0 18 * * 1-5",
                "scheduled_action_name": "scale_in-gitlab-runner-as-group"
              }
            },
            {
              "address": "module.runner.aws_autoscaling_schedule.scale_out",
              "mode": "managed",
              "type": "aws_autoscaling_schedule",
              "name": "scale_out",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "autoscaling_group_name": "gitlab-runner-as-group",
                "desired_capacity": 1,
                "max_size": 1,
                "min_size": 1,
                "recurrence": "0 8 * * 1-5",
                "scheduled_action_name": "scale_out-gitlab-runner-as-group"
              }
            },
            {
              "address": "module.runner.aws_cloudwatch_log_group.environment",
              "mode": "managed",
              "type": "aws_cloudwatch_log_group",
              "name": "environment",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:logs:ap-southeast-2:885164491973:log-group:gitlab-runner-log-group:*",
                "id": "gitlab-runner-log-group",
                "kms_key_id": "",
                "name": "gitlab-runner-log-group",
                "name_prefix": null,
                "retention_in_days": 0,
                "tags": {}
              }
            },
            {
              "address": "module.runner.aws_iam_instance_profile.docker_machine",
              "mode": "managed",
              "type": "aws_iam_instance_profile",
              "name": "docker_machine",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::885164491973:instance-profile/gitlab-runner-docker-machine-profile",
                "create_date": "2019-10-17T07:53:48Z",
                "id": "gitlab-runner-docker-machine-profile",
                "name": "gitlab-runner-docker-machine-profile",
                "name_prefix": null,
                "path": "/",
                "role": "gitlab-runner-docker-machine-role",
                "roles": [
                  "gitlab-runner-docker-machine-role"
                ],
                "unique_id": "AIPA44F7KITCT4LOMR3TO"
              }
            },
            {
              "address": "module.runner.aws_iam_instance_profile.instance",
              "mode": "managed",
              "type": "aws_iam_instance_profile",
              "name": "instance",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::885164491973:instance-profile/gitlab-runner-instance-profile",
                "create_date": "2019-10-17T07:53:48Z",
                "id": "gitlab-runner-instance-profile",
                "name": "gitlab-runner-instance-profile",
                "name_prefix": null,
                "path": "/",
                "role": "gitlab-runner-instance-role",
                "roles": [
                  "gitlab-runner-instance-role"
                ],
                "unique_id": "AIPA44F7KITCUMTNM6CAP"
              }
            },
            {
              "address": "module.runner.aws_iam_policy.docker_machine_cache",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "docker_machine_cache",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
                "description": "Policy for docker machine instance to access cache",
                "id": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
                "name": "gitlab-runner-docker-machine-cache",
                "name_prefix": null,
                "path": "/",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0/*\"\n      ]\n    }\n  ]\n}\n"
              }
            },
            {
              "address": "module.runner.aws_iam_policy.instance_docker_machine_policy",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "instance_docker_machine_policy",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
                "description": "Policy for docker machine.",
                "id": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
                "name": "gitlab-runner-docker-machine",
                "name_prefix": null,
                "path": "/",
                "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n"
              }
            },
            {
              "address": "module.runner.aws_iam_policy.instance_session_manager_policy",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "instance_session_manager_policy",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
                "description": "Policy session manager.",
                "id": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
                "name": "gitlab-runner-session-manager",
                "name_prefix": null,
                "path": "/",
                "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssmmessages:CreateControlChannel\",\n                \"ssmmessages:CreateDataChannel\",\n                \"ssmmessages:OpenControlChannel\",\n                \"ssmmessages:OpenDataChannel\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}"
              }
            },
            {
              "address": "module.runner.aws_iam_policy.service_linked_role",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "service_linked_role",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
                "description": "Policy for creation of service linked roles.",
                "id": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
                "name": "gitlab-runner-service_linked_role",
                "name_prefix": null,
                "path": "/",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}"
              }
            },
            {
              "address": "module.runner.aws_iam_policy.ssm",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "ssm",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
                "description": "Policy for runner token param access via SSM",
                "id": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
                "name": "gitlab-runner-ssm",
                "name_prefix": null,
                "path": "/",
                "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}"
              }
            },
            {
              "address": "module.runner.aws_iam_role.docker_machine",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "docker_machine",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::885164491973:role/gitlab-runner-docker-machine-role",
                "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                "create_date": "2019-10-17T07:53:46Z",
                "description": "",
                "force_detach_policies": false,
                "id": "gitlab-runner-docker-machine-role",
                "max_session_duration": 3600,
                "name": "gitlab-runner-docker-machine-role",
                "name_prefix": null,
                "path": "/",
                "permissions_boundary": null,
                "tags": {},
                "unique_id": "AROA44F7KITCV2O2B4BBI"
              }
            },
            {
              "address": "module.runner.aws_iam_role.instance",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "instance",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::885164491973:role/gitlab-runner-instance-role",
                "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                "create_date": "2019-10-17T07:53:46Z",
                "description": "",
                "force_detach_policies": false,
                "id": "gitlab-runner-instance-role",
                "max_session_duration": 3600,
                "name": "gitlab-runner-instance-role",
                "name_prefix": null,
                "path": "/",
                "permissions_boundary": null,
                "tags": {},
                "unique_id": "AROA44F7KITCQWBHVJAGP"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy.instance",
              "mode": "managed",
              "type": "aws_iam_role_policy",
              "name": "instance",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "id": "gitlab-runner-instance-role:gitlab-runner-instance-role",
                "name": "gitlab-runner-instance-role",
                "name_prefix": null,
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                "role": "gitlab-runner-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.docker_machine_cache_instance",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "docker_machine_cache_instance",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "id": "gitlab-runner-instance-role-20191017075352141100000008",
                "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
                "role": "gitlab-runner-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.instance_docker_machine_policy",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "instance_docker_machine_policy",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "id": "gitlab-runner-instance-role-20191017075349468600000004",
                "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
                "role": "gitlab-runner-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.instance_session_manager_aws_managed",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "instance_session_manager_aws_managed",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "id": "gitlab-runner-instance-role-20191017075348705800000003",
                "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
                "role": "gitlab-runner-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.instance_session_manager_policy",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "instance_session_manager_policy",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "id": "gitlab-runner-instance-role-20191017075349564400000007",
                "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
                "role": "gitlab-runner-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.service_linked_role",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "service_linked_role",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "id": "gitlab-runner-instance-role-20191017075349471200000005",
                "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
                "role": "gitlab-runner-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.ssm",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "ssm",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "id": "gitlab-runner-instance-role-20191017075349515400000006",
                "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
                "role": "gitlab-runner-instance-role"
              }
            },
            {
              "address": "module.runner.aws_launch_configuration.gitlab_runner_instance",
              "mode": "managed",
              "type": "aws_launch_configuration",
              "name": "gitlab_runner_instance",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "associate_public_ip_address": false,
                "enable_monitoring": true,
                "ephemeral_block_device": [],
                "iam_instance_profile": "gitlab-runner-instance-profile",
                "image_id": "ami-042710e2a62ecec92",
                "instance_type": "t3.micro",
                "key_name": "default",
                "name_prefix": null,
                "placement_tenancy": null,
                "root_block_device": [
                  {
                    "delete_on_termination": true,
                    "volume_size": 8,
                    "volume_type": "gp2"
                  }
                ],
                "security_groups": [
                  "sg-0da027c8708d5a1a1"
                ],
                "spot_price": null,
                "user_data": "a942485eee07761c04af37d5c81d6a434cad347d",
                "user_data_base64": null,
                "vpc_classic_link_id": null,
                "vpc_classic_link_security_groups": null
              }
            },
            {
              "address": "module.runner.aws_s3_bucket.build_cache",
              "mode": "managed",
              "type": "aws_s3_bucket",
              "name": "build_cache",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "acceleration_status": "",
                "acl": "private",
                "arn": "arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
                "bucket": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
                "bucket_domain_name": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0.s3.amazonaws.com",
                "bucket_prefix": null,
                "bucket_regional_domain_name": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0.s3.ap-southeast-2.amazonaws.com",
                "cors_rule": [],
                "force_destroy": true,
                "hosted_zone_id": "Z1WCIGYICN2BYD",
                "id": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
                "lifecycle_rule": [
                  {
                    "abort_incomplete_multipart_upload_days": 0,
                    "enabled": true,
                    "expiration": [
                      {
                        "date": "",
                        "days": 1,
                        "expired_object_delete_marker": false
                      }
                    ],
                    "id": "clear",
                    "noncurrent_version_expiration": [
                      {
                        "days": 1
                      }
                    ],
                    "noncurrent_version_transition": [],
                    "prefix": "runner/",
                    "tags": {},
                    "transition": []
                  }
                ],
                "logging": [],
                "object_lock_configuration": [],
                "policy": null,
                "region": "ap-southeast-2",
                "replication_configuration": [],
                "request_payer": "BucketOwner",
                "server_side_encryption_configuration": [
                  {
                    "rule": [
                      {
                        "apply_server_side_encryption_by_default": [
                          {
                            "kms_master_key_id": "",
                            "sse_algorithm": "AES256"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tags": {},
                "versioning": [
                  {
                    "enabled": false,
                    "mfa_delete": false
                  }
                ],
                "website": [],
                "website_domain": null,
                "website_endpoint": null
              }
            },
            {
              "address": "module.runner.aws_security_group.docker_machine",
              "mode": "managed",
              "type": "aws_security_group",
              "name": "docker_machine",
              "provider_name": "aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:ap-southeast-2:885164491973:security-group/sg-04eaa83b1a9bbdca7",
                "description": "Managed by Terraform",
                "egress": [
                  {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": "",
                    "from_port": 0,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "-1",
                    "security_groups": [],
                    "self": false,
                    "to_port": 0
                  }
                ],
                "id": "sg-04eaa83b1a9bbdca7",
                "ingress": [
                  {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": "",
                    "from_port": 22,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [],
                    "self": false,
                    "to_port": 22
                  },
                  {
                    "cidr_blocks": [],
                    "description": "",
                    "from_port": 2376,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-0da027c8708d5a1a1"
                    ],
                    "self": true,
                    "to_port": 2376
                  }
                ],
                "name": "gitlab-runner-docker-machine20191017075345454800000001",
                "name_prefix": "gitlab-runner-docker-machine",
                "owner_id": "885164491973",
                "revoke_rules_on_delete": false,
                "tags": {},
                "timeouts": null,
                "vpc_id": "vpc-07a59518ae4faa320"
              }
            },
            {
              "address": "module.runner.aws_security_group.runner",
              "mode": "managed",
              "type": "aws_security_group",
              "name": "runner",
              "provider_name": "aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:ap-southeast-2:885164491973:security-group/sg-0da027c8708d5a1a1",
                "description": "Managed by Terraform",
                "egress": [
                  {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": "",
                    "from_port": 0,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "-1",
                    "security_groups": [],
                    "self": false,
                    "to_port": 0
                  }
                ],
                "id": "sg-0da027c8708d5a1a1",
                "ingress": [],
                "name": "gitlab-runner-security-group20191017075345459800000002",
                "name_prefix": "gitlab-runner-security-group",
                "owner_id": "885164491973",
                "revoke_rules_on_delete": false,
                "tags": {},
                "timeouts": null,
                "vpc_id": "vpc-07a59518ae4faa320"
              }
            },
            {
              "address": "module.runner.aws_security_group_rule.docker_machine_docker_runner",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "docker_machine_docker_runner",
              "provider_name": "aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "",
                "from_port": 2376,
                "id": "sgrule-2214692661",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-04eaa83b1a9bbdca7",
                "self": false,
                "source_security_group_id": "sg-0da027c8708d5a1a1",
                "to_port": 2376,
                "type": "ingress"
              }
            },
            {
              "address": "module.runner.aws_security_group_rule.docker_machine_docker_self",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "docker_machine_docker_self",
              "provider_name": "aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "",
                "from_port": 2376,
                "id": "sgrule-2352412340",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-04eaa83b1a9bbdca7",
                "self": true,
                "source_security_group_id": "sg-04eaa83b1a9bbdca7",
                "to_port": 2376,
                "type": "ingress"
              }
            },
            {
              "address": "module.runner.aws_security_group_rule.docker_machine_ssh",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "docker_machine_ssh",
              "provider_name": "aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "id": "sgrule-3134283554",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-04eaa83b1a9bbdca7",
                "self": false,
                "source_security_group_id": null,
                "to_port": 22,
                "type": "ingress"
              }
            },
            {
              "address": "module.runner.aws_security_group_rule.out_all",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "out_all",
              "provider_name": "aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "id": "sgrule-3440665133",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_group_id": "sg-04eaa83b1a9bbdca7",
                "self": false,
                "source_security_group_id": null,
                "to_port": 0,
                "type": "egress"
              }
            },
            {
              "address": "module.runner.aws_ssm_parameter.runner_registration_token",
              "mode": "managed",
              "type": "aws_ssm_parameter",
              "name": "runner_registration_token",
              "provider_name": "aws",
              "schema_version": 0,
              "values": {
                "allowed_pattern": "",
                "arn": "arn:aws:ssm:ap-southeast-2:885164491973:parameter/gitlab-runner-runner-token",
                "description": "",
                "id": "gitlab-runner-runner-token",
                "key_id": "alias/aws/ssm",
                "name": "gitlab-runner-runner-token",
                "overwrite": null,
                "tags": {},
                "tier": "Standard",
                "type": "SecureString",
                "value": "null",
                "version": 1
              }
            }
          ],
          "address": "module.runner"
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "module.runner.aws_autoscaling_group.gitlab_runner_instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "gitlab_runner_instance",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "desired_capacity": 1,
          "enabled_metrics": null,
          "force_delete": false,
          "health_check_grace_period": 0,
          "initial_lifecycle_hook": [],
          "launch_template": [],
          "max_size": 1,
          "metrics_granularity": "1Minute",
          "min_elb_capacity": null,
          "min_size": 1,
          "mixed_instances_policy": [],
          "name": "gitlab-runner-as-group",
          "name_prefix": null,
          "placement_group": null,
          "protect_from_scale_in": false,
          "suspended_processes": null,
          "tag": [],
          "tags": null,
          "termination_policies": null,
          "timeouts": null,
          "vpc_zone_identifier": [
            "subnet-00f1b18508dcc87f8",
            "subnet-01e37c6ab538e9ab1",
            "subnet-02b4067bb91f61a59"
          ],
          "wait_for_capacity_timeout": "10m",
          "wait_for_elb_capacity": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zones": true,
          "default_cooldown": true,
          "health_check_type": true,
          "id": true,
          "initial_lifecycle_hook": [],
          "launch_configuration": true,
          "launch_template": [],
          "load_balancers": true,
          "mixed_instances_policy": [],
          "service_linked_role_arn": true,
          "tag": [],
          "target_group_arns": true,
          "vpc_zone_identifier": [
            false,
            false,
            false
          ]
        }
      }
    },
    {
      "address": "module.runner.aws_autoscaling_schedule.scale_in",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_autoscaling_schedule",
      "name": "scale_in",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "autoscaling_group_name": "gitlab-runner-as-group",
          "desired_capacity": 0,
          "max_size": 0,
          "min_size": 0,
          "recurrence": "0 18 * * 1-5",
          "scheduled_action_name": "scale_in-gitlab-runner-as-group"
        },
        "after_unknown": {
          "arn": true,
          "end_time": true,
          "id": true,
          "start_time": true
        }
      }
    },
    {
      "address": "module.runner.aws_autoscaling_schedule.scale_out",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_autoscaling_schedule",
      "name": "scale_out",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "autoscaling_group_name": "gitlab-runner-as-group",
          "desired_capacity": 1,
          "max_size": 1,
          "min_size": 1,
          "recurrence": "0 8 * * 1-5",
          "scheduled_action_name": "scale_out-gitlab-runner-as-group"
        },
        "after_unknown": {
          "arn": true,
          "end_time": true,
          "id": true,
          "start_time": true
        }
      }
    },
    {
      "address": "module.runner.aws_cloudwatch_log_group.environment",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "environment",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:logs:ap-southeast-2:885164491973:log-group:gitlab-runner-log-group:*",
          "id": "gitlab-runner-log-group",
          "kms_key_id": "",
          "name": "gitlab-runner-log-group",
          "name_prefix": null,
          "retention_in_days": 0,
          "tags": {}
        },
        "after": {
          "arn": "arn:aws:logs:ap-southeast-2:885164491973:log-group:gitlab-runner-log-group:*",
          "id": "gitlab-runner-log-group",
          "kms_key_id": "",
          "name": "gitlab-runner-log-group",
          "name_prefix": null,
          "retention_in_days": 0,
          "tags": {}
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_instance_profile.docker_machine",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "docker_machine",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::885164491973:instance-profile/gitlab-runner-docker-machine-profile",
          "create_date": "2019-10-17T07:53:48Z",
          "id": "gitlab-runner-docker-machine-profile",
          "name": "gitlab-runner-docker-machine-profile",
          "name_prefix": null,
          "path": "/",
          "role": "gitlab-runner-docker-machine-role",
          "roles": [
            "gitlab-runner-docker-machine-role"
          ],
          "unique_id": "AIPA44F7KITCT4LOMR3TO"
        },
        "after": {
          "arn": "arn:aws:iam::885164491973:instance-profile/gitlab-runner-docker-machine-profile",
          "create_date": "2019-10-17T07:53:48Z",
          "id": "gitlab-runner-docker-machine-profile",
          "name": "gitlab-runner-docker-machine-profile",
          "name_prefix": null,
          "path": "/",
          "role": "gitlab-runner-docker-machine-role",
          "roles": [
            "gitlab-runner-docker-machine-role"
          ],
          "unique_id": "AIPA44F7KITCT4LOMR3TO"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_instance_profile.instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "instance",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::885164491973:instance-profile/gitlab-runner-instance-profile",
          "create_date": "2019-10-17T07:53:48Z",
          "id": "gitlab-runner-instance-profile",
          "name": "gitlab-runner-instance-profile",
          "name_prefix": null,
          "path": "/",
          "role": "gitlab-runner-instance-role",
          "roles": [
            "gitlab-runner-instance-role"
          ],
          "unique_id": "AIPA44F7KITCUMTNM6CAP"
        },
        "after": {
          "arn": "arn:aws:iam::885164491973:instance-profile/gitlab-runner-instance-profile",
          "create_date": "2019-10-17T07:53:48Z",
          "id": "gitlab-runner-instance-profile",
          "name": "gitlab-runner-instance-profile",
          "name_prefix": null,
          "path": "/",
          "role": "gitlab-runner-instance-role",
          "roles": [
            "gitlab-runner-instance-role"
          ],
          "unique_id": "AIPA44F7KITCUMTNM6CAP"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_policy.docker_machine_cache",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "docker_machine_cache",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
          "description": "Policy for docker machine instance to access cache",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
          "name": "gitlab-runner-docker-machine-cache",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0/*\"\n      ]\n    }\n  ]\n}\n"
        },
        "after": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
          "description": "Policy for docker machine instance to access cache",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
          "name": "gitlab-runner-docker-machine-cache",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0/*\"\n      ]\n    }\n  ]\n}\n"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_policy.instance_docker_machine_policy",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "instance_docker_machine_policy",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
          "description": "Policy for docker machine.",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
          "name": "gitlab-runner-docker-machine",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n"
        },
        "after": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
          "description": "Policy for docker machine.",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
          "name": "gitlab-runner-docker-machine",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_policy.instance_session_manager_policy",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "instance_session_manager_policy",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
          "description": "Policy session manager.",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
          "name": "gitlab-runner-session-manager",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssmmessages:CreateControlChannel\",\n                \"ssmmessages:CreateDataChannel\",\n                \"ssmmessages:OpenControlChannel\",\n                \"ssmmessages:OpenDataChannel\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}"
        },
        "after": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
          "description": "Policy session manager.",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
          "name": "gitlab-runner-session-manager",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssmmessages:CreateControlChannel\",\n                \"ssmmessages:CreateDataChannel\",\n                \"ssmmessages:OpenControlChannel\",\n                \"ssmmessages:OpenDataChannel\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_policy.service_linked_role",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "service_linked_role",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
          "description": "Policy for creation of service linked roles.",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
          "name": "gitlab-runner-service_linked_role",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}"
        },
        "after": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
          "description": "Policy for creation of service linked roles.",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
          "name": "gitlab-runner-service_linked_role",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_policy.ssm",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "ssm",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
          "description": "Policy for runner token param access via SSM",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
          "name": "gitlab-runner-ssm",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}"
        },
        "after": {
          "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
          "description": "Policy for runner token param access via SSM",
          "id": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
          "name": "gitlab-runner-ssm",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role.docker_machine",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "docker_machine",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::885164491973:role/gitlab-runner-docker-machine-role",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2019-10-17T07:53:46Z",
          "description": "",
          "force_detach_policies": false,
          "id": "gitlab-runner-docker-machine-role",
          "max_session_duration": 3600,
          "name": "gitlab-runner-docker-machine-role",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "unique_id": "AROA44F7KITCV2O2B4BBI"
        },
        "after": {
          "arn": "arn:aws:iam::885164491973:role/gitlab-runner-docker-machine-role",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2019-10-17T07:53:46Z",
          "description": "",
          "force_detach_policies": false,
          "id": "gitlab-runner-docker-machine-role",
          "max_session_duration": 3600,
          "name": "gitlab-runner-docker-machine-role",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "unique_id": "AROA44F7KITCV2O2B4BBI"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role.instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "instance",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::885164491973:role/gitlab-runner-instance-role",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2019-10-17T07:53:46Z",
          "description": "",
          "force_detach_policies": false,
          "id": "gitlab-runner-instance-role",
          "max_session_duration": 3600,
          "name": "gitlab-runner-instance-role",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "unique_id": "AROA44F7KITCQWBHVJAGP"
        },
        "after": {
          "arn": "arn:aws:iam::885164491973:role/gitlab-runner-instance-role",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2019-10-17T07:53:46Z",
          "description": "",
          "force_detach_policies": false,
          "id": "gitlab-runner-instance-role",
          "max_session_duration": 3600,
          "name": "gitlab-runner-instance-role",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "unique_id": "AROA44F7KITCQWBHVJAGP"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy.instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "instance",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gitlab-runner-instance-role:gitlab-runner-instance-role",
          "name": "gitlab-runner-instance-role",
          "name_prefix": null,
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
          "role": "gitlab-runner-instance-role"
        },
        "after": {
          "id": "gitlab-runner-instance-role:gitlab-runner-instance-role",
          "name": "gitlab-runner-instance-role",
          "name_prefix": null,
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
          "role": "gitlab-runner-instance-role"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.docker_machine_cache_instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "docker_machine_cache_instance",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gitlab-runner-instance-role-20191017075352141100000008",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
          "role": "gitlab-runner-instance-role"
        },
        "after": {
          "id": "gitlab-runner-instance-role-20191017075352141100000008",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
          "role": "gitlab-runner-instance-role"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.instance_docker_machine_policy",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "instance_docker_machine_policy",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gitlab-runner-instance-role-20191017075349468600000004",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
          "role": "gitlab-runner-instance-role"
        },
        "after": {
          "id": "gitlab-runner-instance-role-20191017075349468600000004",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
          "role": "gitlab-runner-instance-role"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.instance_session_manager_aws_managed",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "instance_session_manager_aws_managed",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gitlab-runner-instance-role-20191017075348705800000003",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "role": "gitlab-runner-instance-role"
        },
        "after": {
          "id": "gitlab-runner-instance-role-20191017075348705800000003",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "role": "gitlab-runner-instance-role"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.instance_session_manager_policy",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "instance_session_manager_policy",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gitlab-runner-instance-role-20191017075349564400000007",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
          "role": "gitlab-runner-instance-role"
        },
        "after": {
          "id": "gitlab-runner-instance-role-20191017075349564400000007",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
          "role": "gitlab-runner-instance-role"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.service_linked_role",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "service_linked_role",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gitlab-runner-instance-role-20191017075349471200000005",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
          "role": "gitlab-runner-instance-role"
        },
        "after": {
          "id": "gitlab-runner-instance-role-20191017075349471200000005",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
          "role": "gitlab-runner-instance-role"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.ssm",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "ssm",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gitlab-runner-instance-role-20191017075349515400000006",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
          "role": "gitlab-runner-instance-role"
        },
        "after": {
          "id": "gitlab-runner-instance-role-20191017075349515400000006",
          "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
          "role": "gitlab-runner-instance-role"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_launch_configuration.gitlab_runner_instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "gitlab_runner_instance",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "associate_public_ip_address": false,
          "enable_monitoring": true,
          "ephemeral_block_device": [],
          "iam_instance_profile": "gitlab-runner-instance-profile",
          "image_id": "ami-042710e2a62ecec92",
          "instance_type": "t3.micro",
          "key_name": "default",
          "name_prefix": null,
          "placement_tenancy": null,
          "root_block_device": [
            {
              "delete_on_termination": true,
              "volume_size": 8,
              "volume_type": "gp2"
            }
          ],
          "security_groups": [
            "sg-0da027c8708d5a1a1"
          ],
          "spot_price": null,
          "user_data": "a942485eee07761c04af37d5c81d6a434cad347d",
          "user_data_base64": null,
          "vpc_classic_link_id": null,
          "vpc_classic_link_security_groups": null
        },
        "after_unknown": {
          "ebs_block_device": true,
          "ebs_optimized": true,
          "ephemeral_block_device": [],
          "id": true,
          "name": true,
          "root_block_device": [
            {
              "encrypted": true,
              "iops": true
            }
          ],
          "security_groups": [
            false
          ]
        }
      }
    },
    {
      "address": "module.runner.aws_s3_bucket.build_cache",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "build_cache",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "acceleration_status": "",
          "acl": "private",
          "arn": "arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
          "bucket": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
          "bucket_domain_name": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0.s3.amazonaws.com",
          "bucket_prefix": null,
          "bucket_regional_domain_name": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0.s3.ap-southeast-2.amazonaws.com",
          "cors_rule": [],
          "force_destroy": true,
          "hosted_zone_id": "Z1WCIGYICN2BYD",
          "id": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
          "lifecycle_rule": [
            {
              "abort_incomplete_multipart_upload_days": 0,
              "enabled": true,
              "expiration": [
                {
                  "date": "",
                  "days": 1,
                  "expired_object_delete_marker": false
                }
              ],
              "id": "clear",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "runner/",
              "tags": {},
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "policy": null,
          "region": "ap-southeast-2",
          "replication_configuration": [],
          "request_payer": "BucketOwner",
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "kms_master_key_id": "",
                      "sse_algorithm": "AES256"
                    }
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "versioning": [
            {
              "enabled": false,
              "mfa_delete": false
            }
          ],
          "website": [],
          "website_domain": null,
          "website_endpoint": null
        },
        "after": {
          "acceleration_status": "",
          "acl": "private",
          "arn": "arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
          "bucket": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
          "bucket_domain_name": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0.s3.amazonaws.com",
          "bucket_prefix": null,
          "bucket_regional_domain_name": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0.s3.ap-southeast-2.amazonaws.com",
          "cors_rule": [],
          "force_destroy": true,
          "hosted_zone_id": "Z1WCIGYICN2BYD",
          "id": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
          "lifecycle_rule": [
            {
              "abort_incomplete_multipart_upload_days": 0,
              "enabled": true,
              "expiration": [
                {
                  "date": "",
                  "days": 1,
                  "expired_object_delete_marker": false
                }
              ],
              "id": "clear",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "runner/",
              "tags": {},
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "policy": null,
          "region": "ap-southeast-2",
          "replication_configuration": [],
          "request_payer": "BucketOwner",
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "kms_master_key_id": "",
                      "sse_algorithm": "AES256"
                    }
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "versioning": [
            {
              "enabled": false,
              "mfa_delete": false
            }
          ],
          "website": [],
          "website_domain": null,
          "website_endpoint": null
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_security_group.docker_machine",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "docker_machine",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:ap-southeast-2:885164491973:security-group/sg-04eaa83b1a9bbdca7",
          "description": "Managed by Terraform",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-04eaa83b1a9bbdca7",
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            },
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 2376,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0da027c8708d5a1a1"
              ],
              "self": true,
              "to_port": 2376
            }
          ],
          "name": "gitlab-runner-docker-machine20191017075345454800000001",
          "name_prefix": "gitlab-runner-docker-machine",
          "owner_id": "885164491973",
          "revoke_rules_on_delete": false,
          "tags": {},
          "timeouts": null,
          "vpc_id": "vpc-07a59518ae4faa320"
        },
        "after": {
          "arn": "arn:aws:ec2:ap-southeast-2:885164491973:security-group/sg-04eaa83b1a9bbdca7",
          "description": "Managed by Terraform",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-04eaa83b1a9bbdca7",
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            },
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 2376,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0da027c8708d5a1a1"
              ],
              "self": true,
              "to_port": 2376
            }
          ],
          "name": "gitlab-runner-docker-machine20191017075345454800000001",
          "name_prefix": "gitlab-runner-docker-machine",
          "owner_id": "885164491973",
          "revoke_rules_on_delete": false,
          "tags": {},
          "timeouts": null,
          "vpc_id": "vpc-07a59518ae4faa320"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_security_group.runner",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "runner",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:ap-southeast-2:885164491973:security-group/sg-0da027c8708d5a1a1",
          "description": "Managed by Terraform",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0da027c8708d5a1a1",
          "ingress": [],
          "name": "gitlab-runner-security-group20191017075345459800000002",
          "name_prefix": "gitlab-runner-security-group",
          "owner_id": "885164491973",
          "revoke_rules_on_delete": false,
          "tags": {},
          "timeouts": null,
          "vpc_id": "vpc-07a59518ae4faa320"
        },
        "after": {
          "arn": "arn:aws:ec2:ap-southeast-2:885164491973:security-group/sg-0da027c8708d5a1a1",
          "description": "Managed by Terraform",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0da027c8708d5a1a1",
          "ingress": [],
          "name": "gitlab-runner-security-group20191017075345459800000002",
          "name_prefix": "gitlab-runner-security-group",
          "owner_id": "885164491973",
          "revoke_rules_on_delete": false,
          "tags": {},
          "timeouts": null,
          "vpc_id": "vpc-07a59518ae4faa320"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_security_group_rule.docker_machine_docker_runner",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "docker_machine_docker_runner",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "",
          "from_port": 2376,
          "id": "sgrule-2214692661",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-04eaa83b1a9bbdca7",
          "self": false,
          "source_security_group_id": "sg-0da027c8708d5a1a1",
          "to_port": 2376,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "",
          "from_port": 2376,
          "id": "sgrule-2214692661",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-04eaa83b1a9bbdca7",
          "self": false,
          "source_security_group_id": "sg-0da027c8708d5a1a1",
          "to_port": 2376,
          "type": "ingress"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_security_group_rule.docker_machine_docker_self",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "docker_machine_docker_self",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "",
          "from_port": 2376,
          "id": "sgrule-2352412340",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-04eaa83b1a9bbdca7",
          "self": true,
          "source_security_group_id": "sg-04eaa83b1a9bbdca7",
          "to_port": 2376,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "",
          "from_port": 2376,
          "id": "sgrule-2352412340",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-04eaa83b1a9bbdca7",
          "self": true,
          "source_security_group_id": "sg-04eaa83b1a9bbdca7",
          "to_port": 2376,
          "type": "ingress"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_security_group_rule.docker_machine_ssh",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "docker_machine_ssh",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "",
          "from_port": 22,
          "id": "sgrule-3134283554",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-04eaa83b1a9bbdca7",
          "self": false,
          "source_security_group_id": null,
          "to_port": 22,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "",
          "from_port": 22,
          "id": "sgrule-3134283554",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-04eaa83b1a9bbdca7",
          "self": false,
          "source_security_group_id": null,
          "to_port": 22,
          "type": "ingress"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_security_group_rule.out_all",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "out_all",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "",
          "from_port": 0,
          "id": "sgrule-3440665133",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "-1",
          "security_group_id": "sg-04eaa83b1a9bbdca7",
          "self": false,
          "source_security_group_id": null,
          "to_port": 0,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "",
          "from_port": 0,
          "id": "sgrule-3440665133",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "-1",
          "security_group_id": "sg-04eaa83b1a9bbdca7",
          "self": false,
          "source_security_group_id": null,
          "to_port": 0,
          "type": "egress"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.runner.aws_ssm_parameter.runner_registration_token",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "runner_registration_token",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allowed_pattern": "",
          "arn": "arn:aws:ssm:ap-southeast-2:885164491973:parameter/gitlab-runner-runner-token",
          "description": "",
          "id": "gitlab-runner-runner-token",
          "key_id": "alias/aws/ssm",
          "name": "gitlab-runner-runner-token",
          "overwrite": null,
          "tags": {},
          "tier": "Standard",
          "type": "SecureString",
          "value": "null",
          "version": 1
        },
        "after": {
          "allowed_pattern": "",
          "arn": "arn:aws:ssm:ap-southeast-2:885164491973:parameter/gitlab-runner-runner-token",
          "description": "",
          "id": "gitlab-runner-runner-token",
          "key_id": "alias/aws/ssm",
          "name": "gitlab-runner-runner-token",
          "overwrite": null,
          "tags": {},
          "tier": "Standard",
          "type": "SecureString",
          "value": "null",
          "version": 1
        },
        "after_unknown": {}
      }
    }
  ],
  "prior_state": {
    "format_version": "0.1",
    "terraform_version": "0.12.9",
    "values": {
      "root_module": {
        "resources": [
          {
            "address": "data.aws_availability_zones.available",
            "mode": "data",
            "type": "aws_availability_zones",
            "name": "available",
            "provider_name": "aws",
            "schema_version": 0,
            "values": {
              "blacklisted_names": null,
              "blacklisted_zone_ids": null,
              "id": "2019-10-17 08:03:43.799704 +0000 UTC",
              "names": [
                "ap-southeast-2a",
                "ap-southeast-2b",
                "ap-southeast-2c"
              ],
              "state": "available",
              "zone_ids": [
                "apse2-az1",
                "apse2-az3",
                "apse2-az2"
              ]
            }
          }
        ],
        "child_modules": [
          {
            "resources": [
              {
                "address": "aws_cloudwatch_log_group.environment",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "environment",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:logs:ap-southeast-2:885164491973:log-group:gitlab-runner-log-group:*",
                  "id": "gitlab-runner-log-group",
                  "kms_key_id": "",
                  "name": "gitlab-runner-log-group",
                  "name_prefix": null,
                  "retention_in_days": 0,
                  "tags": {}
                }
              },
              {
                "address": "aws_iam_instance_profile.docker_machine",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "docker_machine",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::885164491973:instance-profile/gitlab-runner-docker-machine-profile",
                  "create_date": "2019-10-17T07:53:48Z",
                  "id": "gitlab-runner-docker-machine-profile",
                  "name": "gitlab-runner-docker-machine-profile",
                  "name_prefix": null,
                  "path": "/",
                  "role": "gitlab-runner-docker-machine-role",
                  "roles": [
                    "gitlab-runner-docker-machine-role"
                  ],
                  "unique_id": "AIPA44F7KITCT4LOMR3TO"
                },
                "depends_on": [
                  "aws_iam_role.docker_machine"
                ]
              },
              {
                "address": "aws_iam_instance_profile.instance",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "instance",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::885164491973:instance-profile/gitlab-runner-instance-profile",
                  "create_date": "2019-10-17T07:53:48Z",
                  "id": "gitlab-runner-instance-profile",
                  "name": "gitlab-runner-instance-profile",
                  "name_prefix": null,
                  "path": "/",
                  "role": "gitlab-runner-instance-role",
                  "roles": [
                    "gitlab-runner-instance-role"
                  ],
                  "unique_id": "AIPA44F7KITCUMTNM6CAP"
                },
                "depends_on": [
                  "aws_iam_role.instance"
                ]
              },
              {
                "address": "aws_iam_policy.docker_machine_cache",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "docker_machine_cache",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
                  "description": "Policy for docker machine instance to access cache",
                  "id": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
                  "name": "gitlab-runner-docker-machine-cache",
                  "name_prefix": null,
                  "path": "/",
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0/*\"\n      ]\n    }\n  ]\n}\n"
                },
                "depends_on": [
                  "data.template_file.docker_machine_cache_policy"
                ]
              },
              {
                "address": "aws_iam_policy.instance_docker_machine_policy",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "instance_docker_machine_policy",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
                  "description": "Policy for docker machine.",
                  "id": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
                  "name": "gitlab-runner-docker-machine",
                  "name_prefix": null,
                  "path": "/",
                  "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n"
                },
                "depends_on": [
                  "data.template_file.instance_docker_machine_policy"
                ]
              },
              {
                "address": "aws_iam_policy.instance_session_manager_policy",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "instance_session_manager_policy",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
                  "description": "Policy session manager.",
                  "id": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
                  "name": "gitlab-runner-session-manager",
                  "name_prefix": null,
                  "path": "/",
                  "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssmmessages:CreateControlChannel\",\n                \"ssmmessages:CreateDataChannel\",\n                \"ssmmessages:OpenControlChannel\",\n                \"ssmmessages:OpenDataChannel\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}"
                },
                "depends_on": [
                  "data.template_file.instance_session_manager_policy"
                ]
              },
              {
                "address": "aws_iam_policy.service_linked_role",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "service_linked_role",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
                  "description": "Policy for creation of service linked roles.",
                  "id": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
                  "name": "gitlab-runner-service_linked_role",
                  "name_prefix": null,
                  "path": "/",
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}"
                },
                "depends_on": [
                  "data.template_file.service_linked_role"
                ]
              },
              {
                "address": "aws_iam_policy.ssm",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "ssm",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
                  "description": "Policy for runner token param access via SSM",
                  "id": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
                  "name": "gitlab-runner-ssm",
                  "name_prefix": null,
                  "path": "/",
                  "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}"
                },
                "depends_on": [
                  "data.template_file.ssm_policy"
                ]
              },
              {
                "address": "aws_iam_role.docker_machine",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "docker_machine",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::885164491973:role/gitlab-runner-docker-machine-role",
                  "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                  "create_date": "2019-10-17T07:53:46Z",
                  "description": "",
                  "force_detach_policies": false,
                  "id": "gitlab-runner-docker-machine-role",
                  "max_session_duration": 3600,
                  "name": "gitlab-runner-docker-machine-role",
                  "name_prefix": null,
                  "path": "/",
                  "permissions_boundary": null,
                  "tags": {},
                  "unique_id": "AROA44F7KITCV2O2B4BBI"
                },
                "depends_on": [
                  "data.template_file.dockermachine_role_trust_policy"
                ]
              },
              {
                "address": "aws_iam_role.instance",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "instance",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::885164491973:role/gitlab-runner-instance-role",
                  "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                  "create_date": "2019-10-17T07:53:46Z",
                  "description": "",
                  "force_detach_policies": false,
                  "id": "gitlab-runner-instance-role",
                  "max_session_duration": 3600,
                  "name": "gitlab-runner-instance-role",
                  "name_prefix": null,
                  "path": "/",
                  "permissions_boundary": null,
                  "tags": {},
                  "unique_id": "AROA44F7KITCQWBHVJAGP"
                },
                "depends_on": [
                  "data.template_file.instance_role_trust_policy"
                ]
              },
              {
                "address": "aws_iam_role_policy.instance",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "instance",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "id": "gitlab-runner-instance-role:gitlab-runner-instance-role",
                  "name": "gitlab-runner-instance-role",
                  "name_prefix": null,
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                  "role": "gitlab-runner-instance-role"
                },
                "depends_on": [
                  "aws_iam_role.instance",
                  "data.template_file.instance_profile"
                ]
              },
              {
                "address": "aws_iam_role_policy_attachment.docker_machine_cache_instance",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "docker_machine_cache_instance",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "id": "gitlab-runner-instance-role-20191017075352141100000008",
                  "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine-cache",
                  "role": "gitlab-runner-instance-role"
                },
                "depends_on": [
                  "aws_iam_policy.docker_machine_cache",
                  "aws_iam_role.instance"
                ]
              },
              {
                "address": "aws_iam_role_policy_attachment.instance_docker_machine_policy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_docker_machine_policy",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "id": "gitlab-runner-instance-role-20191017075349468600000004",
                  "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-docker-machine",
                  "role": "gitlab-runner-instance-role"
                },
                "depends_on": [
                  "aws_iam_policy.instance_docker_machine_policy",
                  "aws_iam_role.instance"
                ]
              },
              {
                "address": "aws_iam_role_policy_attachment.instance_session_manager_aws_managed",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_session_manager_aws_managed",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "id": "gitlab-runner-instance-role-20191017075348705800000003",
                  "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
                  "role": "gitlab-runner-instance-role"
                },
                "depends_on": [
                  "aws_iam_role.instance"
                ]
              },
              {
                "address": "aws_iam_role_policy_attachment.instance_session_manager_policy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_session_manager_policy",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "id": "gitlab-runner-instance-role-20191017075349564400000007",
                  "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-session-manager",
                  "role": "gitlab-runner-instance-role"
                },
                "depends_on": [
                  "aws_iam_policy.instance_session_manager_policy",
                  "aws_iam_role.instance"
                ]
              },
              {
                "address": "aws_iam_role_policy_attachment.service_linked_role",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "service_linked_role",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "id": "gitlab-runner-instance-role-20191017075349471200000005",
                  "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-service_linked_role",
                  "role": "gitlab-runner-instance-role"
                },
                "depends_on": [
                  "aws_iam_policy.service_linked_role",
                  "aws_iam_role.instance"
                ]
              },
              {
                "address": "aws_iam_role_policy_attachment.ssm",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "ssm",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "id": "gitlab-runner-instance-role-20191017075349515400000006",
                  "policy_arn": "arn:aws:iam::885164491973:policy/gitlab-runner-ssm",
                  "role": "gitlab-runner-instance-role"
                },
                "depends_on": [
                  "aws_iam_policy.ssm",
                  "aws_iam_role.instance"
                ]
              },
              {
                "address": "aws_s3_bucket.build_cache",
                "mode": "managed",
                "type": "aws_s3_bucket",
                "name": "build_cache",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "acceleration_status": "",
                  "acl": "private",
                  "arn": "arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
                  "bucket": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
                  "bucket_domain_name": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0.s3.amazonaws.com",
                  "bucket_prefix": null,
                  "bucket_regional_domain_name": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0.s3.ap-southeast-2.amazonaws.com",
                  "cors_rule": [],
                  "force_destroy": true,
                  "hosted_zone_id": "Z1WCIGYICN2BYD",
                  "id": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
                  "lifecycle_rule": [
                    {
                      "abort_incomplete_multipart_upload_days": 0,
                      "enabled": true,
                      "expiration": [
                        {
                          "date": "",
                          "days": 1,
                          "expired_object_delete_marker": false
                        }
                      ],
                      "id": "clear",
                      "noncurrent_version_expiration": [
                        {
                          "days": 1
                        }
                      ],
                      "noncurrent_version_transition": [],
                      "prefix": "runner/",
                      "tags": {},
                      "transition": []
                    }
                  ],
                  "logging": [],
                  "object_lock_configuration": [],
                  "policy": null,
                  "region": "ap-southeast-2",
                  "replication_configuration": [],
                  "request_payer": "BucketOwner",
                  "server_side_encryption_configuration": [
                    {
                      "rule": [
                        {
                          "apply_server_side_encryption_by_default": [
                            {
                              "kms_master_key_id": "",
                              "sse_algorithm": "AES256"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {},
                  "versioning": [
                    {
                      "enabled": false,
                      "mfa_delete": false
                    }
                  ],
                  "website": [],
                  "website_domain": null,
                  "website_endpoint": null
                }
              },
              {
                "address": "aws_security_group.docker_machine",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "docker_machine",
                "provider_name": "aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:ap-southeast-2:885164491973:security-group/sg-04eaa83b1a9bbdca7",
                  "description": "Managed by Terraform",
                  "egress": [
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "description": "",
                      "from_port": 0,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "-1",
                      "security_groups": [],
                      "self": false,
                      "to_port": 0
                    }
                  ],
                  "id": "sg-04eaa83b1a9bbdca7",
                  "ingress": [
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "description": "",
                      "from_port": 22,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [],
                      "self": false,
                      "to_port": 22
                    },
                    {
                      "cidr_blocks": [],
                      "description": "",
                      "from_port": 2376,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-0da027c8708d5a1a1"
                      ],
                      "self": true,
                      "to_port": 2376
                    }
                  ],
                  "name": "gitlab-runner-docker-machine20191017075345454800000001",
                  "name_prefix": "gitlab-runner-docker-machine",
                  "owner_id": "885164491973",
                  "revoke_rules_on_delete": false,
                  "tags": {},
                  "timeouts": null,
                  "vpc_id": "vpc-07a59518ae4faa320"
                }
              },
              {
                "address": "aws_security_group.runner",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "runner",
                "provider_name": "aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:ap-southeast-2:885164491973:security-group/sg-0da027c8708d5a1a1",
                  "description": "Managed by Terraform",
                  "egress": [
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "description": "",
                      "from_port": 0,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "-1",
                      "security_groups": [],
                      "self": false,
                      "to_port": 0
                    }
                  ],
                  "id": "sg-0da027c8708d5a1a1",
                  "ingress": [],
                  "name": "gitlab-runner-security-group20191017075345459800000002",
                  "name_prefix": "gitlab-runner-security-group",
                  "owner_id": "885164491973",
                  "revoke_rules_on_delete": false,
                  "tags": {},
                  "timeouts": null,
                  "vpc_id": "vpc-07a59518ae4faa320"
                }
              },
              {
                "address": "aws_security_group_rule.docker_machine_docker_runner",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_docker_runner",
                "provider_name": "aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "",
                  "from_port": 2376,
                  "id": "sgrule-2214692661",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-04eaa83b1a9bbdca7",
                  "self": false,
                  "source_security_group_id": "sg-0da027c8708d5a1a1",
                  "to_port": 2376,
                  "type": "ingress"
                },
                "depends_on": [
                  "aws_security_group.docker_machine",
                  "aws_security_group.runner"
                ]
              },
              {
                "address": "aws_security_group_rule.docker_machine_docker_self",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_docker_self",
                "provider_name": "aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "",
                  "from_port": 2376,
                  "id": "sgrule-2352412340",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-04eaa83b1a9bbdca7",
                  "self": true,
                  "source_security_group_id": "sg-04eaa83b1a9bbdca7",
                  "to_port": 2376,
                  "type": "ingress"
                },
                "depends_on": [
                  "aws_security_group.docker_machine"
                ]
              },
              {
                "address": "aws_security_group_rule.docker_machine_ssh",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_ssh",
                "provider_name": "aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": "",
                  "from_port": 22,
                  "id": "sgrule-3134283554",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-04eaa83b1a9bbdca7",
                  "self": false,
                  "source_security_group_id": null,
                  "to_port": 22,
                  "type": "ingress"
                },
                "depends_on": [
                  "aws_security_group.docker_machine"
                ]
              },
              {
                "address": "aws_security_group_rule.out_all",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "out_all",
                "provider_name": "aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": "",
                  "from_port": 0,
                  "id": "sgrule-3440665133",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "-1",
                  "security_group_id": "sg-04eaa83b1a9bbdca7",
                  "self": false,
                  "source_security_group_id": null,
                  "to_port": 0,
                  "type": "egress"
                },
                "depends_on": [
                  "aws_security_group.docker_machine"
                ]
              },
              {
                "address": "aws_ssm_parameter.runner_registration_token",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "runner_registration_token",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "allowed_pattern": "",
                  "arn": "arn:aws:ssm:ap-southeast-2:885164491973:parameter/gitlab-runner-runner-token",
                  "description": "",
                  "id": "gitlab-runner-runner-token",
                  "key_id": "alias/aws/ssm",
                  "name": "gitlab-runner-runner-token",
                  "overwrite": null,
                  "tags": {},
                  "tier": "Standard",
                  "type": "SecureString",
                  "value": "null",
                  "version": 1
                }
              },
              {
                "address": "data.aws_ami.docker-machine",
                "mode": "data",
                "type": "aws_ami",
                "name": "docker-machine",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "architecture": "x86_64",
                  "block_device_mappings": [
                    {
                      "device_name": "/dev/sda1",
                      "ebs": {
                        "delete_on_termination": "true",
                        "encrypted": "false",
                        "iops": "0",
                        "snapshot_id": "snap-0ff93853a9b3f63d8",
                        "volume_size": "8",
                        "volume_type": "gp2"
                      },
                      "no_device": "",
                      "virtual_name": ""
                    },
                    {
                      "device_name": "/dev/sdb",
                      "ebs": {},
                      "no_device": "",
                      "virtual_name": "ephemeral0"
                    },
                    {
                      "device_name": "/dev/sdc",
                      "ebs": {},
                      "no_device": "",
                      "virtual_name": "ephemeral1"
                    }
                  ],
                  "creation_date": "2019-09-13T17:29:07.000Z",
                  "description": "Canonical, Ubuntu, 16.04 LTS, amd64 xenial image build on 2019-09-13",
                  "executable_users": null,
                  "filter": [
                    {
                      "name": "name",
                      "values": [
                        "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*"
                      ]
                    }
                  ],
                  "hypervisor": "xen",
                  "id": "ami-0328aad0f6218c429",
                  "image_id": "ami-0328aad0f6218c429",
                  "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20190913",
                  "image_owner_alias": null,
                  "image_type": "machine",
                  "kernel_id": null,
                  "most_recent": true,
                  "name": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20190913",
                  "name_regex": null,
                  "owner_id": "099720109477",
                  "owners": [
                    "099720109477"
                  ],
                  "platform": null,
                  "product_codes": [],
                  "public": true,
                  "ramdisk_id": null,
                  "root_device_name": "/dev/sda1",
                  "root_device_type": "ebs",
                  "root_snapshot_id": "snap-0ff93853a9b3f63d8",
                  "sriov_net_support": "simple",
                  "state": "available",
                  "state_reason": {
                    "code": "UNSET",
                    "message": "UNSET"
                  },
                  "tags": {},
                  "virtualization_type": "hvm"
                }
              },
              {
                "address": "data.aws_ami.runner",
                "mode": "data",
                "type": "aws_ami",
                "name": "runner",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "architecture": "x86_64",
                  "block_device_mappings": [
                    {
                      "device_name": "/dev/xvda",
                      "ebs": {
                        "delete_on_termination": "true",
                        "encrypted": "false",
                        "iops": "0",
                        "snapshot_id": "snap-0a3de281278d574d8",
                        "volume_size": "8",
                        "volume_type": "standard"
                      },
                      "no_device": "",
                      "virtual_name": ""
                    }
                  ],
                  "creation_date": "2019-08-26T20:04:12.000Z",
                  "description": "Amazon Linux AMI 2018.03.0.20190826 x86_64 HVM ebs",
                  "executable_users": null,
                  "filter": [
                    {
                      "name": "name",
                      "values": [
                        "amzn-ami-hvm-2018.03*-x86_64-ebs"
                      ]
                    }
                  ],
                  "hypervisor": "xen",
                  "id": "ami-042710e2a62ecec92",
                  "image_id": "ami-042710e2a62ecec92",
                  "image_location": "amazon/amzn-ami-hvm-2018.03.0.20190826-x86_64-ebs",
                  "image_owner_alias": "amazon",
                  "image_type": "machine",
                  "kernel_id": null,
                  "most_recent": true,
                  "name": "amzn-ami-hvm-2018.03.0.20190826-x86_64-ebs",
                  "name_regex": null,
                  "owner_id": "137112412989",
                  "owners": [
                    "amazon"
                  ],
                  "platform": null,
                  "product_codes": [],
                  "public": true,
                  "ramdisk_id": null,
                  "root_device_name": "/dev/xvda",
                  "root_device_type": "ebs",
                  "root_snapshot_id": "snap-0a3de281278d574d8",
                  "sriov_net_support": "simple",
                  "state": "available",
                  "state_reason": {
                    "code": "UNSET",
                    "message": "UNSET"
                  },
                  "tags": {},
                  "virtualization_type": "hvm"
                }
              },
              {
                "address": "data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "account_id": "885164491973",
                  "arn": "arn:aws:iam::885164491973:user/alex",
                  "id": "2019-10-17 08:03:44.758414 +0000 UTC",
                  "user_id": "AIDAIA2HJENE7W7DDPY5G"
                }
              },
              {
                "address": "data.template_file.docker_machine_cache_policy",
                "mode": "data",
                "type": "template_file",
                "name": "docker_machine_cache_policy",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "8290fc1051c1077aff1d85e27146aeb440013c1cf00326d275c0490a7e0a2861",
                  "rendered": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0/*\"\n      ]\n    }\n  ]\n}\n",
                  "template": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"${s3_cache_arn}/*\"\n      ]\n    }\n  ]\n}\n",
                  "vars": {
                    "s3_cache_arn": "arn:aws:s3:::config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0"
                  }
                },
                "depends_on": [
                  "aws_s3_bucket.build_cache"
                ]
              },
              {
                "address": "data.template_file.dockermachine_role_trust_policy",
                "mode": "data",
                "type": "template_file",
                "name": "dockermachine_role_trust_policy",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "076813d744fd385b5d2f7835cf05a679ebb0aabfbbbf5a6276fe332b21574ef9",
                  "rendered": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                  "template": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                  "vars": null
                }
              },
              {
                "address": "data.template_file.instance_docker_machine_policy",
                "mode": "data",
                "type": "template_file",
                "name": "instance_docker_machine_policy",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "0eb6c3eef4e4dbb84db587607b70ac45ce271dfda81550e61eff9c005748cea4",
                  "rendered": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n",
                  "template": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n",
                  "vars": null
                }
              },
              {
                "address": "data.template_file.instance_profile",
                "mode": "data",
                "type": "template_file",
                "name": "instance_profile",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "dfc92f1d1a2d77d35956f5027600590d5209342b3ac3d39f8959e5a372db8afc",
                  "rendered": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                  "template": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                  "vars": null
                }
              },
              {
                "address": "data.template_file.instance_role_trust_policy",
                "mode": "data",
                "type": "template_file",
                "name": "instance_role_trust_policy",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "076813d744fd385b5d2f7835cf05a679ebb0aabfbbbf5a6276fe332b21574ef9",
                  "rendered": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                  "template": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                  "vars": null
                }
              },
              {
                "address": "data.template_file.instance_session_manager_policy",
                "mode": "data",
                "type": "template_file",
                "name": "instance_session_manager_policy",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "d18ef671737961f82e7b653b02ec13b66c180dd4d8f183fa9ba52dac6893e5b6",
                  "rendered": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssmmessages:CreateControlChannel\",\n                \"ssmmessages:CreateDataChannel\",\n                \"ssmmessages:OpenControlChannel\",\n                \"ssmmessages:OpenDataChannel\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}",
                  "template": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssmmessages:CreateControlChannel\",\n                \"ssmmessages:CreateDataChannel\",\n                \"ssmmessages:OpenControlChannel\",\n                \"ssmmessages:OpenDataChannel\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}",
                  "vars": null
                }
              },
              {
                "address": "data.template_file.runners",
                "mode": "data",
                "type": "template_file",
                "name": "runners",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "a95b7e7c6ab346f0beb36dfc605792b49ab107d6cb162c39e1e15dd36f9743db",
                  "rendered": "concurrent = 10\ncheck_interval = 0\n\n[[runners]]\n  name = \"test-runner\"\n  url = \"https://gitlab.com\"\n  token = \"##TOKEN##\"\n  executor = \"docker+machine\"\n  environment = []\n  request_concurrency = 1\n  output_limit = 4096\n  limit = 0\n  [runners.docker]\n    tls_verify = false\n    image = \"docker:18.03.1-ce\"\n    privileged = true\n    disable_cache = false\n    shm_size = 0\n    pull_policy = \"always\"\n  [runners.cache]\n    Type = \"s3\"\n    Shared = false\n    [runners.cache.s3]\n      ServerAddress = \"s3.amazonaws.com\"\n      BucketName = \"config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0\"\n      BucketLocation = \"ap-southeast-2\"\n      Insecure = false\n  [runners.machine]\n    IdleCount = 0\n    IdleTime = 600\n    MaxBuilds = 0\n    MachineDriver = \"amazonec2\"\n    MachineName = \"runner-%s\"\n    MachineOptions = [\n      \"amazonec2-instance-type=m5a.large\",\n      \"amazonec2-region=ap-southeast-2\",\n      \"amazonec2-zone=a\",\n      \"amazonec2-vpc-id=vpc-07a59518ae4faa320\",\n      \"amazonec2-subnet-id=subnet-00f1b18508dcc87f8\",\n      \"amazonec2-private-address-only=true\",\n      \"amazonec2-request-spot-instance=true\",\n      \"amazonec2-spot-price=0.06\",\n      \"amazonec2-security-group=gitlab-runner-docker-machine20191017075345454800000001\",\n      \"amazonec2-monitoring=false\",\n      \"amazonec2-iam-instance-profile=gitlab-runner-docker-machine-profile,\n      \"amazonec2-root-size=16\",\n      \"amazonec2-ami=ami-0328aad0f6218c429\"\n    ]\n    OffPeakTimezone = \"Australia/Sydney\"\n    OffPeakIdleCount = 0\n    OffPeakIdleTime = 60\n    OffPeakPeriods = [\"* * 0-9,17-23 * * mon-fri *\",\"* * * * * sat,sun *\"]\n",
                  "template": "concurrent = ${globals_concurrent}\ncheck_interval = 0\n\n[[runners]]\n  name = \"${runners_name}\"\n  url = \"${runners_url}\"\n  token = \"##TOKEN##\"\n  executor = \"docker+machine\"\n  environment = ${runners_environment}\n  request_concurrency = ${runners_request_concurrency}\n  output_limit = ${runners_output_limit}\n  limit = ${runners_limit}\n  [runners.docker]\n    tls_verify = false\n    image = \"${runners_docker_image}\"\n    privileged = true\n    disable_cache = false\n    shm_size = ${runners_docker_shm_size}\n    pull_policy = \"always\"\n  [runners.cache]\n    Type = \"s3\"\n    Shared = false\n    [runners.cache.s3]\n      ServerAddress = \"s3.amazonaws.com\"\n      BucketName = \"${runners_cache_bucket_name}\"\n      BucketLocation = \"${aws_region}\"\n      Insecure = false\n  [runners.machine]\n    IdleCount = ${runners_machine_idle_count}\n    IdleTime = ${runners_machine_idle_time}\n%{ if runners_machine_max_builds != 0 ~}\n    MaxBuilds = ${runners_machine_max_builds}\n%{ endif ~}\n    MachineDriver = \"amazonec2\"\n    MachineName = \"runner-%s\"\n    MachineOptions = [\n      \"amazonec2-instance-type=${docker_machine_instance_type}\",\n      \"amazonec2-region=${aws_region}\",\n      \"amazonec2-zone=${aws_availability_zone}\",\n      \"amazonec2-vpc-id=${vpc_id}\",\n      \"amazonec2-subnet-id=${subnet_id}\",\n      \"amazonec2-private-address-only=true\",\n      \"amazonec2-request-spot-instance=true\",\n      \"amazonec2-spot-price=${docker_machine_spot_price}\",\n      \"amazonec2-security-group=${docker_machine_security_group}\",\n      \"amazonec2-monitoring=false\",\n      \"amazonec2-iam-instance-profile=${docker_machine_iam_instance_profile},\n      \"amazonec2-root-size=${docker_machine_root_size}\",\n      \"amazonec2-ami=${docker_machine_ami}\"\n    ]\n    OffPeakTimezone = \"${runners_machine_off_peak_timezone}\"\n    OffPeakIdleCount = ${runners_machine_off_peak_idle_count}\n    OffPeakIdleTime = ${runners_machine_off_peak_idle_time}\n%{ if runners_machine_off_peak_periods != \"\" ~}\n    OffPeakPeriods = ${runners_machine_off_peak_periods}\n%{ endif ~}\n",
                  "vars": {
                    "aws_availability_zone": "a",
                    "aws_region": "ap-southeast-2",
                    "docker_machine_ami": "ami-0328aad0f6218c429",
                    "docker_machine_iam_instance_profile": "gitlab-runner-docker-machine-profile",
                    "docker_machine_instance_type": "m5a.large",
                    "docker_machine_root_size": "16",
                    "docker_machine_security_group": "gitlab-runner-docker-machine20191017075345454800000001",
                    "docker_machine_spot_price": "0.06",
                    "globals_concurrent": "10",
                    "runners_cache_bucket_name": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0",
                    "runners_docker_image": "docker:18.03.1-ce",
                    "runners_docker_shm_size": "0",
                    "runners_environment": "[]",
                    "runners_limit": "0",
                    "runners_machine_idle_count": "0",
                    "runners_machine_idle_time": "600",
                    "runners_machine_max_builds": "0",
                    "runners_machine_off_peak_idle_count": "0",
                    "runners_machine_off_peak_idle_time": "60",
                    "runners_machine_off_peak_periods": "[\"* * 0-9,17-23 * * mon-fri *\",\"* * * * * sat,sun *\"]",
                    "runners_machine_off_peak_timezone": "Australia/Sydney",
                    "runners_name": "test-runner",
                    "runners_output_limit": "4096",
                    "runners_request_concurrency": "1",
                    "runners_url": "https://gitlab.com",
                    "subnet_id": "subnet-00f1b18508dcc87f8",
                    "vpc_id": "vpc-07a59518ae4faa320"
                  }
                },
                "depends_on": [
                  "aws_iam_instance_profile.docker_machine",
                  "aws_security_group.docker_machine",
                  "data.aws_ami.docker-machine"
                ]
              },
              {
                "address": "data.template_file.service_linked_role",
                "mode": "data",
                "type": "template_file",
                "name": "service_linked_role",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "1810d3d0047d4a566eaf344d20df8e28f83e9d9591cf18a8f1f70545d531f7e1",
                  "rendered": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}",
                  "template": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}",
                  "vars": null
                }
              },
              {
                "address": "data.template_file.ssm_policy",
                "mode": "data",
                "type": "template_file",
                "name": "ssm_policy",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "682038adca60ed5248dea881521e3fd90039ac69fa9a7a3e9bf1932ba4cc3664",
                  "rendered": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}",
                  "template": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}",
                  "vars": null
                }
              },
              {
                "address": "data.template_file.user_data",
                "mode": "data",
                "type": "template_file",
                "name": "user_data",
                "provider_name": "template",
                "schema_version": 0,
                "values": {
                  "filename": null,
                  "id": "a4d3b2a40f9d2eee8f87a73a22b16138dfa593af1d94b7526648b947719886ea",
                  "rendered": "#!/usr/bin/env bash\n\nawslogs_conf='/etc/awslogs/awslogs.conf'\nawscli_conf='/etc/awslogs/awscli.conf'\nconfig_toml='/etc/gitlab-runner/config.toml'\n\nupdate_hosts_file() {\n  echo \"\\\n127.0.0.1   localhost localhost.localdomain $(hostname)\" \\\n  >> /etc/hosts\n}\n\nupdate_system() {\n  yum -y update\n}\n\ninstall_deps() {\n  yum -y install aws-cli awslogs jq\n}\n\nconfigure_cloudwatch() {\n  local instance_id region\n\n  read -r instance_id region <<< \"$(\n    curl -s https://169.254.169.254/latest/dynamic/instance-identity/document \\\n      | jq -r '[.instanceId, .region] | @tsv'\n  )\"\n\n  cat > \"$awslogs_conf\" <<EOF\n[general]\nstate_file = /var/lib/awslogs/agent-state\n\n[/var/log/dmesg]\nfile = /var/log/dmesg\nlog_stream_name = $instance_id/dmesg\nlog_group_name = gitlab-runner-log-group\ninitial_position = start_of_file\n\n[/var/log/messages]\nfile = /var/log/messages\nlog_stream_name = $instance_id/messages\nlog_group_name = gitlab-runner-log-group\ndatetime_format = %b %d %H:%M:%S\ninitial_position = start_of_file\n\n[/var/log/user-data.log]\nfile = /var/log/user-data.log\nlog_stream_name = $instance_id/user-data\nlog_group_name = gitlab-runner-log-group\ninitial_position = start_of_file\nEOF\n\n  sed -i '\n    s/region = us-east-1/region = '\"$region\"'/\n  ' \"$awscli_conf\"\n\n  service awslogs start\n  chkconfig awslogs on\n}\n\ngenerate_config_toml() {\n  mkdir -p /etc/gitlab-runner\n  cat > \"$config_toml\" <<EOF\nconcurrent = 10\ncheck_interval = 0\n\n[[runners]]\n  name = \"test-runner\"\n  url = \"https://gitlab.com\"\n  token = \"##TOKEN##\"\n  executor = \"docker+machine\"\n  environment = []\n  request_concurrency = 1\n  output_limit = 4096\n  limit = 0\n  [runners.docker]\n    tls_verify = false\n    image = \"docker:18.03.1-ce\"\n    privileged = true\n    disable_cache = false\n    shm_size = 0\n    pull_policy = \"always\"\n  [runners.cache]\n    Type = \"s3\"\n    Shared = false\n    [runners.cache.s3]\n      ServerAddress = \"s3.amazonaws.com\"\n      BucketName = \"config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0\"\n      BucketLocation = \"ap-southeast-2\"\n      Insecure = false\n  [runners.machine]\n    IdleCount = 0\n    IdleTime = 600\n    MaxBuilds = 0\n    MachineDriver = \"amazonec2\"\n    MachineName = \"runner-%s\"\n    MachineOptions = [\n      \"amazonec2-instance-type=m5a.large\",\n      \"amazonec2-region=ap-southeast-2\",\n      \"amazonec2-zone=a\",\n      \"amazonec2-vpc-id=vpc-07a59518ae4faa320\",\n      \"amazonec2-subnet-id=subnet-00f1b18508dcc87f8\",\n      \"amazonec2-private-address-only=true\",\n      \"amazonec2-request-spot-instance=true\",\n      \"amazonec2-spot-price=0.06\",\n      \"amazonec2-security-group=gitlab-runner-docker-machine20191017075345454800000001\",\n      \"amazonec2-monitoring=false\",\n      \"amazonec2-iam-instance-profile=gitlab-runner-docker-machine-profile,\n      \"amazonec2-root-size=16\",\n      \"amazonec2-ami=ami-0328aad0f6218c429\"\n    ]\n    OffPeakTimezone = \"Australia/Sydney\"\n    OffPeakIdleCount = 0\n    OffPeakIdleTime = 60\n    OffPeakPeriods = [\"* * 0-9,17-23 * * mon-fri *\",\"* * * * * sat,sun *\"]\n\nEOF\n}\n\ninstall_gitlab_runner() {\n  curl -L \\\n    https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | bash\n  yum -y install gitlab-runner-\"12.3.0\"\n  curl --fail --retry 6 -L \\\n    https://github.com/docker/machine/releases/download/v\"0.16.2\"/docker-machine-\"$(uname -s)\"-\"$(uname -m)\" > /tmp/docker-machine\n  chmod +x /tmp/docker-machine\n  cp /tmp/docker-machine /usr/local/bin/docker-machine\n  ln -s /usr/local/bin/docker-machine /usr/bin/docker-machine\n\n  # Create a dummy machine so that the cert is generated properly\n  # See: https://gitlab.com/gitlab-org/gitlab-runner/issues/3676\n  docker-machine create --driver none --url localhost dummy-machine\n}\n\nregister_runner() {\n  token=$(aws ssm get-parameters --names \"gitlab-runner-runner-token\" \\\n    --with-decryption --region \"ap-southeast-2\" | jq -r '.Parameters[].Value')\n\n  if [ \"$token\" == \"null\" ] ; then\n    token=$(\n      curl -X POST -L \"https://gitlab.com/api/v4/runners\" \\\n        -F \"token=GBpeL612xfp3DtEjzZsx\" \\\n        -F \"description=runner default - auto\" \\\n        -F \"locked=true\" \\\n        -F \"run_untagged=false\" \\\n        -F \"maximum_timeout=3600\" \\\n        -F \"access_level=not_protected\" \\\n      | jq -r .token\n    )\n\n    aws ssm put-parameter --overwrite --type SecureString --name \\\n      \"gitlab-runner-runner-token\" --value \"$token\" --region \"ap-southeast-2\"\n  fi\n\n  sed -i 's/##TOKEN##/'\"$token\"'/' \"$config_toml\"\n}\n\nstart_gitlab_runner() {\n  service gitlab-runner restart\n  chkconfig gitlab-runner on\n}\n\nmain() {\n  update_hosts_file\n  update_system\n  install_deps\n  configure_cloudwatch\n  generate_config_toml\n  install_gitlab_runner\n  register_runner\n  start_gitlab_runner\n}\n\nif [ \"$0\" == \"$BASH_SOURCE\" ] ; then\n  main\nfi\n\n# vim: set ft=sh:\n",
                  "template": "#!/usr/bin/env bash\n\nawslogs_conf='/etc/awslogs/awslogs.conf'\nawscli_conf='/etc/awslogs/awscli.conf'\nconfig_toml='/etc/gitlab-runner/config.toml'\n\nupdate_hosts_file() {\n  echo \"\\\n127.0.0.1   localhost localhost.localdomain $(hostname)\" \\\n  >> /etc/hosts\n}\n\nupdate_system() {\n  yum -y update\n}\n\ninstall_deps() {\n  yum -y install aws-cli awslogs jq\n}\n\nconfigure_cloudwatch() {\n  local instance_id region\n\n  read -r instance_id region <<< \"$(\n    curl -s https://169.254.169.254/latest/dynamic/instance-identity/document \\\n      | jq -r '[.instanceId, .region] | @tsv'\n  )\"\n\n  cat > \"$awslogs_conf\" <<EOF\n[general]\nstate_file = /var/lib/awslogs/agent-state\n\n[/var/log/dmesg]\nfile = /var/log/dmesg\nlog_stream_name = $instance_id/dmesg\nlog_group_name = gitlab-runner-log-group\ninitial_position = start_of_file\n\n[/var/log/messages]\nfile = /var/log/messages\nlog_stream_name = $instance_id/messages\nlog_group_name = gitlab-runner-log-group\ndatetime_format = %b %d %H:%M:%S\ninitial_position = start_of_file\n\n[/var/log/user-data.log]\nfile = /var/log/user-data.log\nlog_stream_name = $instance_id/user-data\nlog_group_name = gitlab-runner-log-group\ninitial_position = start_of_file\nEOF\n\n  sed -i '\n    s/region = us-east-1/region = '\"$region\"'/\n  ' \"$awscli_conf\"\n\n  service awslogs start\n  chkconfig awslogs on\n}\n\ngenerate_config_toml() {\n  mkdir -p /etc/gitlab-runner\n  cat > \"$config_toml\" <<EOF\n${runners_config}\nEOF\n}\n\ninstall_gitlab_runner() {\n  curl -L \\\n    https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | bash\n  yum -y install gitlab-runner-\"${gitlab_runner_version}\"\n  curl --fail --retry 6 -L \\\n    https://github.com/docker/machine/releases/download/v\"${docker_machine_version}\"/docker-machine-\"$(uname -s)\"-\"$(uname -m)\" > /tmp/docker-machine\n  chmod +x /tmp/docker-machine\n  cp /tmp/docker-machine /usr/local/bin/docker-machine\n  ln -s /usr/local/bin/docker-machine /usr/bin/docker-machine\n\n  # Create a dummy machine so that the cert is generated properly\n  # See: https://gitlab.com/gitlab-org/gitlab-runner/issues/3676\n  docker-machine create --driver none --url localhost dummy-machine\n}\n\nregister_runner() {\n  token=$(aws ssm get-parameters --names \"${runners_ssm_token_key}\" \\\n    --with-decryption --region \"${aws_region}\" | jq -r '.Parameters[].Value')\n\n  if [ \"$token\" == \"null\" ] ; then\n    token=$(\n      curl -X POST -L \"${runners_url}/api/v4/runners\" \\\n        -F \"token=${gitlab_runner_registration_token}\" \\\n        -F \"description=${gitlab_runner_description}\" \\\n        -F \"locked=${gitlab_runner_locked_to_project}\" \\\n        -F \"run_untagged=${gitlab_runner_run_untagged}\" \\\n        -F \"maximum_timeout=${gitlab_runner_maximum_timeout}\" \\\n        -F \"access_level=${gitlab_runner_access_level}\" \\\n      | jq -r .token\n    )\n\n    aws ssm put-parameter --overwrite --type SecureString --name \\\n      \"${runners_ssm_token_key}\" --value \"$token\" --region \"${aws_region}\"\n  fi\n\n  sed -i 's/##TOKEN##/'\"$token\"'/' \"$config_toml\"\n}\n\nstart_gitlab_runner() {\n  service gitlab-runner restart\n  chkconfig gitlab-runner on\n}\n\nmain() {\n  update_hosts_file\n  update_system\n  install_deps\n  configure_cloudwatch\n  generate_config_toml\n  install_gitlab_runner\n  register_runner\n  start_gitlab_runner\n}\n\nif [ \"$0\" == \"$BASH_SOURCE\" ] ; then\n  main\nfi\n\n# vim: set ft=sh:\n",
                  "vars": {
                    "aws_region": "ap-southeast-2",
                    "docker_machine_version": "0.16.2",
                    "gitlab_runner_access_level": "not_protected",
                    "gitlab_runner_description": "runner default - auto",
                    "gitlab_runner_locked_to_project": "true",
                    "gitlab_runner_maximum_timeout": "3600",
                    "gitlab_runner_registration_token": "GBpeL612xfp3DtEjzZsx",
                    "gitlab_runner_run_untagged": "false",
                    "gitlab_runner_version": "12.3.0",
                    "runners_config": "concurrent = 10\ncheck_interval = 0\n\n[[runners]]\n  name = \"test-runner\"\n  url = \"https://gitlab.com\"\n  token = \"##TOKEN##\"\n  executor = \"docker+machine\"\n  environment = []\n  request_concurrency = 1\n  output_limit = 4096\n  limit = 0\n  [runners.docker]\n    tls_verify = false\n    image = \"docker:18.03.1-ce\"\n    privileged = true\n    disable_cache = false\n    shm_size = 0\n    pull_policy = \"always\"\n  [runners.cache]\n    Type = \"s3\"\n    Shared = false\n    [runners.cache.s3]\n      ServerAddress = \"s3.amazonaws.com\"\n      BucketName = \"config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0\"\n      BucketLocation = \"ap-southeast-2\"\n      Insecure = false\n  [runners.machine]\n    IdleCount = 0\n    IdleTime = 600\n    MaxBuilds = 0\n    MachineDriver = \"amazonec2\"\n    MachineName = \"runner-%s\"\n    MachineOptions = [\n      \"amazonec2-instance-type=m5a.large\",\n      \"amazonec2-region=ap-southeast-2\",\n      \"amazonec2-zone=a\",\n      \"amazonec2-vpc-id=vpc-07a59518ae4faa320\",\n      \"amazonec2-subnet-id=subnet-00f1b18508dcc87f8\",\n      \"amazonec2-private-address-only=true\",\n      \"amazonec2-request-spot-instance=true\",\n      \"amazonec2-spot-price=0.06\",\n      \"amazonec2-security-group=gitlab-runner-docker-machine20191017075345454800000001\",\n      \"amazonec2-monitoring=false\",\n      \"amazonec2-iam-instance-profile=gitlab-runner-docker-machine-profile,\n      \"amazonec2-root-size=16\",\n      \"amazonec2-ami=ami-0328aad0f6218c429\"\n    ]\n    OffPeakTimezone = \"Australia/Sydney\"\n    OffPeakIdleCount = 0\n    OffPeakIdleTime = 60\n    OffPeakPeriods = [\"* * 0-9,17-23 * * mon-fri *\",\"* * * * * sat,sun *\"]\n",
                    "runners_ssm_token_key": "gitlab-runner-runner-token",
                    "runners_url": "https://gitlab.com"
                  }
                },
                "depends_on": [
                  "data.template_file.runners"
                ]
              }
            ],
            "address": "module.runner"
          }
        ]
      }
    }
  },
  "configuration": {
    "root_module": {
      "resources": [
        {
          "address": "data.aws_availability_zones.available",
          "mode": "data",
          "type": "aws_availability_zones",
          "name": "available",
          "provider_config_key": "aws",
          "expressions": {
            "state": {
              "constant_value": "available"
            }
          },
          "schema_version": 0
        }
      ],
      "module_calls": {
        "runner": {
          "source": "../../",
          "expressions": {
            "aws_region": {
              "constant_value": "ap-southeast-2"
            },
            "enable_ssh_access": {
              "references": [
                "var.enable_ssh_access"
              ]
            },
            "gitlab_runner_registration_config": {
              "references": [
                "var.registration_token"
              ]
            },
            "key_name": {
              "constant_value": "default"
            },
            "runners_cache_bucket_name": {
              "references": [
                "var.bucket_name"
              ]
            },
            "runners_machine_off_peak_idle_count": {
              "constant_value": 0
            },
            "runners_machine_off_peak_idle_time": {
              "constant_value": 60
            },
            "runners_machine_off_peak_periods": {
              "constant_value": [
                "* * 0-9,17-23 * * mon-fri *",
                "* * * * * sat,sun *"
              ]
            },
            "runners_machine_off_peak_timezone": {
              "constant_value": "Australia/Sydney"
            },
            "runners_name": {
              "constant_value": "test-runner"
            },
            "runners_url": {
              "constant_value": "https://gitlab.com"
            },
            "subnet_id": {
              "references": [
                "var.subnet_ids"
              ]
            },
            "subnet_ids": {
              "references": [
                "var.subnet_ids"
              ]
            },
            "vpc_id": {
              "references": [
                "var.vpc_id"
              ]
            }
          },
          "module": {
            "outputs": {
              "runner_agent_role_arn": {
                "expression": {
                  "references": [
                    "aws_iam_role.instance"
                  ]
                },
                "description": "ARN of the role used for the ec2 instance for the GitLab runner agent."
              },
              "runner_agent_role_name": {
                "expression": {
                  "references": [
                    "aws_iam_role.instance"
                  ]
                },
                "description": "Name of the role used for the ec2 instance for the GitLab runner agent."
              },
              "runner_agent_sg_id": {
                "expression": {
                  "references": [
                    "aws_security_group.runner"
                  ]
                },
                "description": "ID of the security group attached to the GitLab runner agent."
              },
              "runner_as_group_name": {
                "expression": {
                  "references": [
                    "aws_autoscaling_group.gitlab_runner_instance"
                  ]
                },
                "description": "Name of the autoscaling group for the gitlab-runner instance"
              },
              "runner_cache_bucket_arn": {
                "expression": {
                  "references": [
                    "aws_s3_bucket.build_cache"
                  ]
                },
                "description": "ARN of the S3 for the build cache."
              },
              "runner_cache_bucket_name": {
                "expression": {
                  "references": [
                    "aws_s3_bucket.build_cache"
                  ]
                },
                "description": "Name of the S3 for the build cache."
              },
              "runner_role_arn": {
                "expression": {
                  "references": [
                    "aws_iam_role.docker_machine"
                  ]
                },
                "description": "ARN of the role used for the docker machine runners."
              },
              "runner_role_name": {
                "expression": {
                  "references": [
                    "aws_iam_role.docker_machine"
                  ]
                },
                "description": "Name of the role used for the docker machine runners."
              },
              "runner_sg_id": {
                "expression": {
                  "references": [
                    "aws_security_group.docker_machine"
                  ]
                },
                "description": "ID of the security group attached to the docker machine runners."
              }
            },
            "resources": [
              {
                "address": "aws_autoscaling_group.gitlab_runner_instance",
                "mode": "managed",
                "type": "aws_autoscaling_group",
                "name": "gitlab_runner_instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "desired_capacity": {
                    "constant_value": "1"
                  },
                  "health_check_grace_period": {
                    "constant_value": 0
                  },
                  "launch_configuration": {
                    "references": [
                      "aws_launch_configuration.gitlab_runner_instance"
                    ]
                  },
                  "max_size": {
                    "constant_value": "1"
                  },
                  "min_size": {
                    "constant_value": "1"
                  },
                  "name": {
                    "constant_value": "gitlab-runner-as-group"
                  },
                  "vpc_zone_identifier": {
                    "references": [
                      "var.subnet_ids"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_autoscaling_schedule.scale_in",
                "mode": "managed",
                "type": "aws_autoscaling_schedule",
                "name": "scale_in",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "autoscaling_group_name": {
                    "references": [
                      "aws_autoscaling_group.gitlab_runner_instance"
                    ]
                  },
                  "desired_capacity": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "max_size": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "min_size": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "recurrence": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "scheduled_action_name": {
                    "references": [
                      "aws_autoscaling_group.gitlab_runner_instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_autoscaling_schedule.scale_out",
                "mode": "managed",
                "type": "aws_autoscaling_schedule",
                "name": "scale_out",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "autoscaling_group_name": {
                    "references": [
                      "aws_autoscaling_group.gitlab_runner_instance"
                    ]
                  },
                  "desired_capacity": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "max_size": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "min_size": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "recurrence": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "scheduled_action_name": {
                    "references": [
                      "aws_autoscaling_group.gitlab_runner_instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_cloudwatch_log_group.environment",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "environment",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "constant_value": "gitlab-runner-log-group"
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_instance_profile.docker_machine",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "docker_machine",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "constant_value": "gitlab-runner-docker-machine-profile"
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.docker_machine"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_instance_profile.instance",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "constant_value": "gitlab-runner-instance-profile"
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_policy.docker_machine_cache",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "docker_machine_cache",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy for docker machine instance to access cache"
                  },
                  "name": {
                    "constant_value": "gitlab-runner-docker-machine-cache"
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "data.template_file.docker_machine_cache_policy"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_policy.instance_docker_machine_policy",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "instance_docker_machine_policy",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy for docker machine."
                  },
                  "name": {
                    "constant_value": "gitlab-runner-docker-machine"
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "data.template_file.instance_docker_machine_policy"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_policy.instance_session_manager_policy",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "instance_session_manager_policy",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy session manager."
                  },
                  "name": {
                    "constant_value": "gitlab-runner-session-manager"
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "data.template_file.instance_session_manager_policy"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_policy.service_linked_role",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "service_linked_role",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy for creation of service linked roles."
                  },
                  "name": {
                    "constant_value": "gitlab-runner-service_linked_role"
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "data.template_file.service_linked_role"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_policy.ssm",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "ssm",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy for runner token param access via SSM"
                  },
                  "name": {
                    "constant_value": "gitlab-runner-ssm"
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "data.template_file.ssm_policy"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role.docker_machine",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "docker_machine",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.template_file.dockermachine_role_trust_policy"
                    ]
                  },
                  "name": {
                    "constant_value": "gitlab-runner-docker-machine-role"
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role.instance",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.template_file.instance_role_trust_policy"
                    ]
                  },
                  "name": {
                    "constant_value": "gitlab-runner-instance-role"
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy.instance",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "constant_value": "gitlab-runner-instance-role"
                  },
                  "policy": {
                    "references": [
                      "data.template_file.instance_profile"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.docker_machine_cache_instance",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "docker_machine_cache_instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.docker_machine_cache"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.instance_docker_machine_policy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_docker_machine_policy",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.instance_docker_machine_policy"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.instance_session_manager_aws_managed",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_session_manager_aws_managed",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "constant_value": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.instance_session_manager_policy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_session_manager_policy",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.instance_session_manager_policy"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.service_linked_role",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "service_linked_role",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.service_linked_role"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.ssm",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "ssm",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.ssm"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_launch_configuration.gitlab_runner_instance",
                "mode": "managed",
                "type": "aws_launch_configuration",
                "name": "gitlab_runner_instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "associate_public_ip_address": {
                    "references": [
                      "var.enable_ssh_access"
                    ]
                  },
                  "iam_instance_profile": {
                    "references": [
                      "aws_iam_instance_profile.instance"
                    ]
                  },
                  "image_id": {
                    "references": [
                      "data.aws_ami.runner"
                    ]
                  },
                  "instance_type": {
                    "references": [
                      "local.instance_type"
                    ]
                  },
                  "key_name": {
                    "references": [
                      "var.key_name"
                    ]
                  },
                  "root_block_device": [
                    {
                      "delete_on_termination": {
                        "constant_value": true
                      },
                      "volume_size": {
                        "constant_value": 8
                      },
                      "volume_type": {
                        "constant_value": "gp2"
                      }
                    }
                  ],
                  "security_groups": {
                    "references": [
                      "aws_security_group.runner"
                    ]
                  },
                  "user_data": {
                    "references": [
                      "data.template_file.user_data"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_s3_bucket.build_cache",
                "mode": "managed",
                "type": "aws_s3_bucket",
                "name": "build_cache",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "acl": {
                    "constant_value": "private"
                  },
                  "bucket": {
                    "references": [
                      "var.runners_cache_bucket_name"
                    ]
                  },
                  "force_destroy": {
                    "constant_value": true
                  },
                  "lifecycle_rule": [
                    {
                      "enabled": {
                        "constant_value": true
                      },
                      "expiration": [
                        {
                          "days": {
                            "constant_value": 1
                          }
                        }
                      ],
                      "id": {
                        "constant_value": "clear"
                      },
                      "noncurrent_version_expiration": [
                        {
                          "days": {
                            "constant_value": 1
                          }
                        }
                      ],
                      "prefix": {
                        "constant_value": "runner/"
                      }
                    }
                  ],
                  "server_side_encryption_configuration": [
                    {
                      "rule": [
                        {
                          "apply_server_side_encryption_by_default": [
                            {
                              "sse_algorithm": {
                                "constant_value": "AES256"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema_version": 0
              },
              {
                "address": "aws_security_group.docker_machine",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "docker_machine",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name_prefix": {
                    "constant_value": "gitlab-runner-docker-machine"
                  },
                  "vpc_id": {
                    "references": [
                      "var.vpc_id"
                    ]
                  }
                },
                "schema_version": 1
              },
              {
                "address": "aws_security_group.runner",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "runner",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name_prefix": {
                    "constant_value": "gitlab-runner-security-group"
                  },
                  "vpc_id": {
                    "references": [
                      "var.vpc_id"
                    ]
                  }
                },
                "schema_version": 1
              },
              {
                "address": "aws_security_group_rule.docker_machine_docker_runner",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_docker_runner",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "from_port": {
                    "constant_value": 2376
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "aws_security_group.runner"
                    ]
                  },
                  "to_port": {
                    "constant_value": 2376
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2
              },
              {
                "address": "aws_security_group_rule.docker_machine_docker_self",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_docker_self",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "from_port": {
                    "constant_value": 2376
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "self": {
                    "constant_value": true
                  },
                  "to_port": {
                    "constant_value": 2376
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2
              },
              {
                "address": "aws_security_group_rule.docker_machine_ssh",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_ssh",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "cidr_blocks": {
                    "references": [
                      "var.ssh_cidr_blocks"
                    ]
                  },
                  "from_port": {
                    "constant_value": 22
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "to_port": {
                    "constant_value": 22
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2
              },
              {
                "address": "aws_security_group_rule.out_all",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "out_all",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "cidr_blocks": {
                    "constant_value": [
                      "0.0.0.0/0"
                    ]
                  },
                  "from_port": {
                    "constant_value": 0
                  },
                  "protocol": {
                    "constant_value": "-1"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "to_port": {
                    "constant_value": 65535
                  },
                  "type": {
                    "constant_value": "egress"
                  }
                },
                "schema_version": 2
              },
              {
                "address": "aws_security_group_rule.runner_ssh",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "runner_ssh",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "cidr_blocks": {
                    "references": [
                      "var.ssh_cidr_blocks"
                    ]
                  },
                  "from_port": {
                    "constant_value": 22
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.runner"
                    ]
                  },
                  "to_port": {
                    "constant_value": 22
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.enable_ssh_access"
                  ]
                }
              },
              {
                "address": "aws_ssm_parameter.runner_registration_token",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "runner_registration_token",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.runners_ssm_token_key"
                    ]
                  },
                  "type": {
                    "constant_value": "SecureString"
                  },
                  "value": {
                    "constant_value": "null"
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.aws_ami.docker-machine",
                "mode": "data",
                "type": "aws_ami",
                "name": "docker-machine",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "filter": [
                    {
                      "name": {
                        "constant_value": "name"
                      },
                      "values": {
                        "constant_value": [
                          "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*"
                        ]
                      }
                    }
                  ],
                  "most_recent": {
                    "constant_value": "true"
                  },
                  "owners": {
                    "references": [
                      "local.canonical_account_id"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.aws_ami.runner",
                "mode": "data",
                "type": "aws_ami",
                "name": "runner",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "filter": [
                    {
                      "name": {
                        "constant_value": "name"
                      },
                      "values": {
                        "constant_value": [
                          "amzn-ami-hvm-2018.03*-x86_64-ebs"
                        ]
                      }
                    }
                  ],
                  "most_recent": {
                    "constant_value": "true"
                  },
                  "owners": {
                    "constant_value": [
                      "amazon"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_config_key": "runner:aws",
                "schema_version": 0
              },
              {
                "address": "data.template_file.docker_machine_cache_policy",
                "mode": "data",
                "type": "template_file",
                "name": "docker_machine_cache_policy",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  },
                  "vars": {
                    "references": [
                      "aws_s3_bucket.build_cache"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.template_file.dockermachine_role_trust_policy",
                "mode": "data",
                "type": "template_file",
                "name": "dockermachine_role_trust_policy",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.template_file.instance_docker_machine_policy",
                "mode": "data",
                "type": "template_file",
                "name": "instance_docker_machine_policy",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.template_file.instance_profile",
                "mode": "data",
                "type": "template_file",
                "name": "instance_profile",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.template_file.instance_role_trust_policy",
                "mode": "data",
                "type": "template_file",
                "name": "instance_role_trust_policy",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.template_file.instance_session_manager_policy",
                "mode": "data",
                "type": "template_file",
                "name": "instance_session_manager_policy",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.template_file.runners",
                "mode": "data",
                "type": "template_file",
                "name": "runners",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  },
                  "vars": {
                    "references": [
                      "var.aws_region",
                      "var.aws_availability_zone",
                      "var.vpc_id",
                      "var.subnet_id",
                      "var.globals_concurrent",
                      "var.runners_name",
                      "var.runners_url",
                      "var.runners_environment",
                      "var.runners_request_concurrency",
                      "var.runners_output_limit",
                      "var.runners_limit",
                      "local.runners_docker_image",
                      "var.runners_docker_shm_size",
                      "var.runners_cache_bucket_name",
                      "var.runners_machine_idle_count",
                      "var.runners_machine_idle_time",
                      "var.runners_machine_max_builds",
                      "aws_iam_instance_profile.docker_machine",
                      "local.docker_machine_instance_type",
                      "local.docker_machine_spot_price",
                      "aws_security_group.docker_machine",
                      "local.docker_machine_root_size",
                      "data.aws_ami.docker-machine",
                      "var.runners_machine_off_peak_idle_count",
                      "var.runners_machine_off_peak_idle_time",
                      "var.runners_machine_off_peak_periods",
                      "var.runners_machine_off_peak_timezone"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.template_file.service_linked_role",
                "mode": "data",
                "type": "template_file",
                "name": "service_linked_role",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.template_file.ssm_policy",
                "mode": "data",
                "type": "template_file",
                "name": "ssm_policy",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.template_file.user_data",
                "mode": "data",
                "type": "template_file",
                "name": "user_data",
                "provider_config_key": "runner:template",
                "expressions": {
                  "template": {
                    "references": [
                      "path.module"
                    ]
                  },
                  "vars": {
                    "references": [
                      "var.aws_region",
                      "local.docker_machine_version",
                      "var.gitlab_runner_registration_config",
                      "var.gitlab_runner_registration_config",
                      "var.gitlab_runner_registration_config",
                      "var.gitlab_runner_registration_config",
                      "var.gitlab_runner_registration_config",
                      "var.gitlab_runner_registration_config",
                      "local.gitlab_runner_version",
                      "data.template_file.runners",
                      "local.runners_ssm_token_key",
                      "var.runners_url"
                    ]
                  }
                },
                "schema_version": 0
              }
            ],
            "variables": {
              "aws_availability_zone": {
                "default": "a",
                "description": "AWS availability zone ('a', 'b', 'c' etc)"
              },
              "aws_region": {
                "description": "Name of S3 region for the runner cache and SSM"
              },
              "enable_ssh_access": {
                "default": false,
                "description": "Enables SSH access to the GitLab Runner instance"
              },
              "gitlab_runner_registration_config": {
                "default": {
                  "access_level": "",
                  "description": "",
                  "locked_to_project": "",
                  "maximum_timeout": "",
                  "registration_token": "",
                  "run_untagged": ""
                },
                "description": "Configuration used to register the runner"
              },
              "globals_concurrent": {
                "default": 10,
                "description": "Concurrent value for the runners"
              },
              "key_name": {
                "default": "default",
                "description": "The name of the EC2 key pair to use"
              },
              "runners_cache_bucket_name": {
                "description": "Name of the storage bucket where runner cache will be stored"
              },
              "runners_docker_shm_size": {
                "default": 0,
                "description": "Shared memory size for images (in bytes)"
              },
              "runners_environment": {
                "default": [],
                "description": "Append or overwrite environment variables"
              },
              "runners_limit": {
                "default": 0,
                "description": "Limit how many jobs can be handled concurrently by this token"
              },
              "runners_machine_idle_count": {
                "default": 0,
                "description": "Number of machines that need to be created and waiting in Idle state"
              },
              "runners_machine_idle_time": {
                "default": 600,
                "description": "Time (in seconds) for machine to be in Idle state before it is removed"
              },
              "runners_machine_max_builds": {
                "default": 0,
                "description": "Builds count after which machine will be removed"
              },
              "runners_machine_off_peak_idle_count": {
                "default": 0,
                "description": "Off peak idle count of the runners"
              },
              "runners_machine_off_peak_idle_time": {
                "default": 0,
                "description": "Off peak idle time of the runners"
              },
              "runners_machine_off_peak_periods": {
                "default": [],
                "description": "Time periods when the scheduler is in the OffPeak mode. A list of cron-style patterns"
              },
              "runners_machine_off_peak_timezone": {
                "default": "Australia/Sydney",
                "description": "Off peak idle time zone of the runners"
              },
              "runners_name": {
                "description": "The Runner's description, just informatory"
              },
              "runners_output_limit": {
                "default": 4096,
                "description": "Set maximum build log size in KB"
              },
              "runners_request_concurrency": {
                "default": 1,
                "description": "Limit number of concurrent requests for new jobs from GitLab"
              },
              "runners_url": {
                "description": "The GitLab URL for the instance to connect to"
              },
              "schedule_config": {
                "default": {
                  "scale_in_count": "0",
                  "scale_in_recurrence": "0 18 * * 1-5",
                  "scale_out_count": "1",
                  "scale_out_recurrence": "0 8 * * 1-5"
                },
                "description": "Map containing the configuration of the ASG scale-in and scale-up for the runner instance"
              },
              "ssh_cidr_blocks": {
                "default": [
                  "0.0.0.0/0"
                ],
                "description": "List of CIDR blocks to allow SSH Access to docker machine and the GitLab Runner"
              },
              "subnet_id": {
                "description": "Subnet used for hosting the GitLab runner"
              },
              "subnet_ids": {
                "description": "List of subnets used for hosting the GitLab runners"
              },
              "vpc_id": {
                "description": "The target VPC for the docker-machine and runner instances"
              }
            }
          }
        }
      },
      "variables": {
        "bucket_name": {
          "default": "config-bucket-1c5a1978-d138-4084-a3b4-fd4c403a89a0"
        },
        "enable_ssh_access": {
          "default": false
        },
        "registration_token": {},
        "subnet_ids": {},
        "vpc_id": {}
      }
    }
  }
}
